{"ast":null,"code":"export const validateEmail = email => {\n  const isEmailValid = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\n  if (email === \"\") {\n    return \"*email-id is a required\";\n  }\n  if (!isEmailValid) {\n    return \"*email-id is not valid\";\n  }\n  return null;\n};\nexport const validatePassword = password => {\n  const isPasswordValid = /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/.test(password);\n  if (password === \"\") {\n    return \"*password is a required\";\n  }\n  if (!isPasswordValid) {\n    return \"*Password is not strong enough\";\n  }\n  return null;\n};\nexport const validateFullName = fullName => {\n  if (fullName === \"\") {\n    return \"*name is required\";\n  }\n};","map":{"version":3,"names":["validateEmail","email","isEmailValid","test","validatePassword","password","isPasswordValid","validateFullName","fullName"],"sources":["C:/nextflix-gpt/src/utils/validate.js"],"sourcesContent":["export const validateEmail = (email) => {\r\n    const isEmailValid = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n\r\n    if(email === \"\"){\r\n        return \"*email-id is a required\";\r\n    }\r\n\r\n    if(!isEmailValid) {\r\n        return \"*email-id is not valid\";\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport const validatePassword = (password) => {\r\n    const isPasswordValid = /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/.test(password);\r\n    if(password === \"\"){\r\n        return \"*password is a required\";\r\n    }\r\n    if(!isPasswordValid){\r\n        return \"*Password is not strong enough\";\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const validateFullName = (fullName) => {\r\n    if(fullName === \"\"){\r\n        return \"*name is required\"\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,KAAK,IAAK;EACpC,MAAMC,YAAY,GAAG,wJAAwJ,CAACC,IAAI,CAACF,KAAK,CAAC;EAEzL,IAAGA,KAAK,KAAK,EAAE,EAAC;IACZ,OAAO,yBAAyB;EACpC;EAEA,IAAG,CAACC,YAAY,EAAE;IACd,OAAO,wBAAwB;EACnC;EACA,OAAO,IAAI;AAEf,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAIC,QAAQ,IAAK;EAC1C,MAAMC,eAAe,GAAG,mEAAmE,CAACH,IAAI,CAACE,QAAQ,CAAC;EAC1G,IAAGA,QAAQ,KAAK,EAAE,EAAC;IACf,OAAO,yBAAyB;EACpC;EACA,IAAG,CAACC,eAAe,EAAC;IAChB,OAAO,gCAAgC;EAC3C;EACA,OAAO,IAAI;AACf,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;EAC1C,IAAGA,QAAQ,KAAK,EAAE,EAAC;IACf,OAAO,mBAAmB;EAC9B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}