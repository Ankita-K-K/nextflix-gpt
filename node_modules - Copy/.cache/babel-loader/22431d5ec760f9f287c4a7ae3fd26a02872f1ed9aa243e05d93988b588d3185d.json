{"ast":null,"code":"var _jsxFileName = \"C:\\\\nextflix-gpt\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Login from './Login';\nimport Browse from './Browse';\nimport { createBrowserRouter } from 'react-router-dom';\nimport { RouterProvider } from 'react-router-dom';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../utils/firebase';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addUser, removeUser } from '../utils/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        const {\n          uid,\n          email,\n          displayName\n        } = auth.user;\n        dispatch(addUser({\n          uid: uid,\n          email: email,\n          displayName: displayName\n        }));\n      } else {\n        dispatch(removeUser());\n      }\n    });\n  }, []);\n  const appRouter = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this)\n  }, {\n    path: \"/browse\",\n    element: /*#__PURE__*/_jsxDEV(Browse, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: appRouter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"C8M3Qnh2JtuXRaZXcPUyNRrk+zo=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useEffect","Login","Browse","createBrowserRouter","RouterProvider","onAuthStateChanged","auth","useDispatch","useNavigate","addUser","removeUser","jsxDEV","_jsxDEV","Body","_s","navigate","dispatch","user","uid","email","displayName","appRouter","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","router","_c","$RefreshReg$"],"sources":["C:/nextflix-gpt/src/components/Body.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport Login from './Login'\r\nimport Browse from './Browse'\r\nimport { createBrowserRouter } from 'react-router-dom'\r\nimport { RouterProvider } from 'react-router-dom';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '../utils/firebase';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {addUser, removeUser} from '../utils/userSlice';\r\n\r\nconst Body = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(()=>{\r\n    onAuthStateChanged(auth, (user)=>{\r\n      if(user){\r\n        const {uid, email, displayName} = auth.user;\r\n        dispatch(addUser({uid:uid, email:email, displayName:displayName}));\r\n      }else{\r\n        dispatch(removeUser());\r\n      }\r\n    })\r\n  },[])\r\n\r\n    const appRouter = createBrowserRouter([\r\n        {\r\n            path:\"/\",\r\n            element:<Login />\r\n        },\r\n        {\r\n            path:\"/browse\",\r\n            element: <Browse />\r\n        }\r\n    ]);\r\n   \r\n\r\n  return (\r\n    <div>\r\n      <RouterProvider router={appRouter} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,OAAO,EAAEC,UAAU,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9BP,SAAS,CAAC,MAAI;IACZK,kBAAkB,CAACC,IAAI,EAAGW,IAAI,IAAG;MAC/B,IAAGA,IAAI,EAAC;QACN,MAAM;UAACC,GAAG;UAAEC,KAAK;UAAEC;QAAW,CAAC,GAAGd,IAAI,CAACW,IAAI;QAC3CD,QAAQ,CAACP,OAAO,CAAC;UAACS,GAAG,EAACA,GAAG;UAAEC,KAAK,EAACA,KAAK;UAAEC,WAAW,EAACA;QAAW,CAAC,CAAC,CAAC;MACpE,CAAC,MAAI;QACHJ,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;MACxB;IACF,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAEH,MAAMW,SAAS,GAAGlB,mBAAmB,CAAC,CAClC;IACImB,IAAI,EAAC,GAAG;IACRC,OAAO,eAACX,OAAA,CAACX,KAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACpB,CAAC,EACD;IACIL,IAAI,EAAC,SAAS;IACdC,OAAO,eAAEX,OAAA,CAACV,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACtB,CAAC,CACJ,CAAC;EAGJ,oBACEf,OAAA;IAAAgB,QAAA,eACEhB,OAAA,CAACR,cAAc;MAACyB,MAAM,EAAER;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAAb,EAAA,CA/BKD,IAAI;EAAA,QACSL,WAAW,EACXD,WAAW;AAAA;AAAAuB,EAAA,GAFxBjB,IAAI;AAiCV,eAAeA,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}