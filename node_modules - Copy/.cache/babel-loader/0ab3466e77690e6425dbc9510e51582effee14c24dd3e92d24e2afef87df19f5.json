{"ast":null,"code":"var _jsxFileName = \"C:\\\\nextflix-gpt\\\\src\\\\components\\\\Browse.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Header from './Header';\nimport useNowPlayingMovies from '../hooks/useNowPlayingMovies';\nimport { useSelector } from 'react-redux';\nimport MainContainer from './MainContainer';\nimport SecondaryContainer from './SecondaryContainer';\nimport usePopularMovies from '../hooks/usePopularMovies';\nimport useTopRatedMovies from '../hooks/useTopRatedMovies';\nimport useUpcomingMovies from '../hooks/useUpcomingMovies';\nimport GptSearch from './GptSearch';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Browse = () => {\n  _s();\n  useNowPlayingMovies();\n  usePopularMovies();\n  useTopRatedMovies();\n  useUpcomingMovies();\n  const showGptSearch = useSelector(store => store.gpt.showGptSearch);\n  const movieId = useSelector(store => store.movies.nowPlayingMovies);\n  console.log(movieId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black bg-opacity-80\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      logState: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), showGptSearch === true ? /*#__PURE__*/_jsxDEV(GptSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(SecondaryContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Browse, \"aE/Guq/ykt3gH3HffWozwCvN1lw=\", false, function () {\n  return [useNowPlayingMovies, usePopularMovies, useTopRatedMovies, useUpcomingMovies, useSelector, useSelector];\n});\n_c = Browse;\nexport default Browse;\nvar _c;\n$RefreshReg$(_c, \"Browse\");","map":{"version":3,"names":["React","Header","useNowPlayingMovies","useSelector","MainContainer","SecondaryContainer","usePopularMovies","useTopRatedMovies","useUpcomingMovies","GptSearch","jsxDEV","_jsxDEV","Fragment","_Fragment","Browse","_s","showGptSearch","store","gpt","movieId","movies","nowPlayingMovies","console","log","className","children","logState","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/nextflix-gpt/src/components/Browse.js"],"sourcesContent":["import React from 'react'\r\nimport Header from './Header'\r\nimport useNowPlayingMovies from '../hooks/useNowPlayingMovies'\r\nimport { useSelector } from 'react-redux';\r\nimport MainContainer from './MainContainer';\r\nimport SecondaryContainer from './SecondaryContainer';\r\nimport usePopularMovies from '../hooks/usePopularMovies';\r\nimport useTopRatedMovies from '../hooks/useTopRatedMovies';\r\nimport useUpcomingMovies from '../hooks/useUpcomingMovies';\r\nimport GptSearch from './GptSearch';\r\n\r\nconst Browse = () => {\r\n  useNowPlayingMovies();\r\n  usePopularMovies();\r\n  useTopRatedMovies();\r\n  useUpcomingMovies();\r\n  const showGptSearch = useSelector((store)=>store.gpt.showGptSearch);\r\n  const movieId = useSelector((store)=>store.movies.nowPlayingMovies);\r\n  console.log(movieId);\r\n  return (\r\n    <div className='bg-black bg-opacity-80'>\r\n      <Header logState={false}/>\r\n      {\r\n        showGptSearch === true ? <GptSearch /> : <><MainContainer />\r\n        <SecondaryContainer /></>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Browse\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,gBAAgB,MAAM,2BAA2B;AACxD,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnBb,mBAAmB,CAAC,CAAC;EACrBI,gBAAgB,CAAC,CAAC;EAClBC,iBAAiB,CAAC,CAAC;EACnBC,iBAAiB,CAAC,CAAC;EACnB,MAAMQ,aAAa,GAAGb,WAAW,CAAEc,KAAK,IAAGA,KAAK,CAACC,GAAG,CAACF,aAAa,CAAC;EACnE,MAAMG,OAAO,GAAGhB,WAAW,CAAEc,KAAK,IAAGA,KAAK,CAACG,MAAM,CAACC,gBAAgB,CAAC;EACnEC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACpB,oBACER,OAAA;IAAKa,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCd,OAAA,CAACV,MAAM;MAACyB,QAAQ,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAExBd,aAAa,KAAK,IAAI,gBAAGL,OAAA,CAACF,SAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGnB,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBAAEd,OAAA,CAACP,aAAa;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DnB,OAAA,CAACN,kBAAkB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExB,CAAC;AAEV,CAAC;AAAAf,EAAA,CAjBKD,MAAM;EAAA,QACVZ,mBAAmB,EACnBI,gBAAgB,EAChBC,iBAAiB,EACjBC,iBAAiB,EACKL,WAAW,EACjBA,WAAW;AAAA;AAAA4B,EAAA,GANvBjB,MAAM;AAmBZ,eAAeA,MAAM;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}